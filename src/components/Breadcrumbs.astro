---
// Breadcrumb Navigation Component
// Automatically generates breadcrumbs based on current URL path
// Great for SEO and user navigation

const { 
  currentPath = Astro.url.pathname,
  homeLabel = "Home",
  separator = "â€º",
  showHome = true,
  className = "",
  customBreadcrumbs = null // For custom breadcrumb overrides
} = Astro.props;

// Custom breadcrumb mappings for better UX
const customLabels = {
  'services': 'Services',
  'brand-services': 'Brand Services',
  'marketing-services': 'Marketing Services', 
  'social-media-services': 'Social Media Services',
  'resources': 'Resources',
  'brand-audit-checklist': 'Brand Audit Checklist',
  'diy-vs-professional-analysis': 'DIY vs Professional Analysis',
  'facebook-guide': 'Facebook Marketing Guide',
  'instagram-guide': 'Instagram Marketing Guide',
  'linkedin-guide': 'LinkedIn Marketing Guide',
  'pinterest-guide': 'Pinterest Marketing Guide',
  'hashtag-research': 'Hashtag Research Template',
  'social-media-calendar': 'Social Media Calendar',
  'platform-overview': 'Platform Overview',
  'portfolio': 'Portfolio',
  'about': 'About Us',
  'contact': 'Contact',
  'faq': 'FAQ',
  'process': 'Our Process',
  'testimonials': 'Testimonials',
  'blog': 'Blog',
  'your-digital-vibes': 'Your Digital Vibes'
};

// Generate breadcrumb items
function generateBreadcrumbs(path, customBreadcrumbs) {
  if (customBreadcrumbs) {
    return customBreadcrumbs;
  }

  // Clean path and split into segments
  const cleanPath = path.replace(/^\/|\/$/g, '');
  if (!cleanPath) return []; // Home page has no breadcrumbs
  
  const segments = cleanPath.split('/').filter(segment => segment);
  const breadcrumbs = [];
  
  let currentPath = '';
  
  segments.forEach((segment, index) => {
    currentPath += `/${segment}`;
    
    // Get custom label or format the segment
    const label = customLabels[segment] || 
                  segment.split('-')
                         .map(word => word.charAt(0).toUpperCase() + word.slice(1))
                         .join(' ');
    
    breadcrumbs.push({
      label,
      href: currentPath,
      isLast: index === segments.length - 1
    });
  });
  
  return breadcrumbs;
}

const breadcrumbs = generateBreadcrumbs(currentPath, customBreadcrumbs);

// Generate structured data for SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    ...(showHome ? [{
      "@type": "ListItem",
      "position": 1,
      "name": homeLabel,
      "item": Astro.site?.toString() || "/"
    }] : []),
    ...breadcrumbs.map((crumb, index) => ({
      "@type": "ListItem",
      "position": (showHome ? 2 : 1) + index,
      "name": crumb.label,
      "item": new URL(crumb.href, Astro.site).toString()
    }))
  ]
};
---

{breadcrumbs.length > 0 && (
  <>
    <!-- Structured Data for SEO -->
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
    
    <!-- Breadcrumb Navigation -->
    <nav class={`breadcrumb-nav ${className}`} aria-label="Breadcrumb navigation">
      <ol class="breadcrumb-list">
        {showHome && (
          <li class="breadcrumb-item">
            <a href="/" class="breadcrumb-link home-link">
              <svg class="home-icon" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z"/>
              </svg>
              <span class="home-label">{homeLabel}</span>
            </a>
            {breadcrumbs.length > 0 && <span class="separator" aria-hidden="true">{separator}</span>}
          </li>
        )}
        
        {breadcrumbs.map((crumb) => (
          <li class="breadcrumb-item">
            {crumb.isLast ? (
              <span class="breadcrumb-current" aria-current="page">
                {crumb.label}
              </span>
            ) : (
              <>
                <a href={crumb.href} class="breadcrumb-link">
                  {crumb.label}
                </a>
                <span class="separator" aria-hidden="true">{separator}</span>
              </>
            )}
          </li>
        ))}
      </ol>
    </nav>
  </>
)}

<style>
  .breadcrumb-nav {
    margin-bottom: 2rem;
    font-size: 0.875rem;
  }

  .breadcrumb-list {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .breadcrumb-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .breadcrumb-link {
    color: var(--text-secondary);
    text-decoration: none;
    transition: color 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .breadcrumb-link:hover {
    color: var(--accent-teal);
    text-decoration: underline;
  }

  .home-link {
    font-weight: 500;
  }

  .home-icon {
    width: 16px;
    height: 16px;
    flex-shrink: 0;
  }

  .home-label {
    display: none;
  }

  .breadcrumb-current {
    color: var(--text-primary);
    font-weight: 500;
  }

  .separator {
    color: var(--text-light);
    font-weight: 300;
    user-select: none;
  }

  /* Show home label on larger screens */
  @media (min-width: 640px) {
    .home-label {
      display: inline;
    }
  }

  /* Responsive design for mobile */
  @media (max-width: 480px) {
    .breadcrumb-nav {
      font-size: 0.8125rem;
      margin-bottom: 1.5rem;
    }
    
    .breadcrumb-list {
      gap: 0.25rem;
    }
    
    .breadcrumb-item {
      gap: 0.25rem;
    }
    
    .separator {
      font-size: 0.75rem;
    }
  }

  /* Dark mode support (if needed) */
  @media (prefers-color-scheme: dark) {
    .breadcrumb-link {
      color: var(--gray-400);
    }
    
    .breadcrumb-link:hover {
      color: var(--accent-teal);
    }
    
    .breadcrumb-current {
      color: var(--primary-white);
    }
    
    .separator {
      color: var(--gray-500);
    }
  }

  /* Accessibility improvements */
  .breadcrumb-nav:focus-within .breadcrumb-link {
    outline: 2px solid var(--accent-teal);
    outline-offset: 2px;
    border-radius: 4px;
  }

  /* Animation for breadcrumb appearance */
  .breadcrumb-nav {
    animation: fadeInUp 0.3s ease-out;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Hover effect for better UX */
  .breadcrumb-item:hover .separator {
    color: var(--accent-teal);
  }

  /* Print styles */
  @media print {
    .breadcrumb-nav {
      display: none;
    }
  }
</style>